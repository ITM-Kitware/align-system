[tool.poetry]
name = "align-system"
version = "0.3.3"
description = ""
authors = ["David Joy <10147749+dmjoy@users.noreply.github.com>"]
readme = "README.md"
packages = [{include = "align_system"}]

[[tool.poetry.source]]
name = "pytorch"
url = "https://download.pytorch.org/whl/cu118"
priority = "supplemental"

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
torch = { version = "^2.0.1", source = "pytorch" }
transformers = "^4.33.1"
llama-index = "^0.8.21"
langchain = "^0.0.308"
sentence-transformers = "^2.2.2"
accelerate = "^0.22.0"
pypdf = "^3.15.5"
pycryptodome = "^3.18.0"
einops = "^0.6.1"
requests = "^2.31.0"
bert-score = "^0.3.13"
rich = "^13.6.0"
rouge-score = "^0.1.2"
swagger-client = {git = "https://github.com/NextCenturyCorporation/itm-evaluation-client.git", rev = "main"}
hydra-core = "^1.3.2"
outlines = "^0.0.46"
setuptools = "^70.1.1"

[tool.poetry.scripts]
run_align_system = 'align_system.cli.run_align_system:main'
run_align_system_deprecated = 'align_system.cli.run_align_system_deprecated:main'
run_simplified_align_system = 'align_system.cli.run_simplified_align_system:main'
run_action_based_align_system = 'align_system.cli.run_action_based_align_system:main'
run_chat_baseline = 'align_system.cli.run_chat_baseline:main'
run_action_based_chat_baseline = 'align_system.cli.run_action_based_chat_baseline:main'

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_calls = true
no_implicit_optional = true
ignore_missing_imports = true

[tool.ruff]
line-length = 120
target-version = 'py38'
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
]

[tool.ruff.lint]
select = ["E", "F", "I", "N", "UP", "PL", "NPY", "RUF", "C90"]
ignore = ["E501", "PLR0913", "N806", "N803", "N812", "N802"]

[tool.pyright]
reportGeneralTypeIssues = false

[tool.black]
line-length = 120
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )
)
'''
